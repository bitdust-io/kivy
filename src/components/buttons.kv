#:import make_icon components.webfont.make_icon
#:import get_icon_code components.webfont.get_icon_code
#:import md_icon components.webfont.md_icon


<BaseRoundButton>:
    canvas:
        Clear
        Color:
            rgba:
                (self.md_bg_color if root.icon in md_icons else (0, 0, 0, 0)) \
                if not root.disabled else \
                (root.md_bg_color_disabled if root.md_bg_color_disabled \
                else root.theme_cls.disabled_hint_text_color)
        Ellipse:
            size: self.size
            pos: self.pos
            source: self.source if hasattr(self, "source") else ""

    size: "48dp", "48dp"
    lbl_txt: lbl_txt
    padding: "12dp" if root.icon in md_icons else (0, 0, 0, 0)

    MDIcon:
        id: lbl_txt
        icon: root.icon
        size_hint_x: None
        width: root.width
        # font_size: root.user_font_size if root.user_font_size else self.font_size
        font_name: root.font_name if root.font_name else self.font_name
        theme_text_color: root.theme_text_color
        text_color:
            root.text_color if not root.disabled else \
            (root.md_bg_color_disabled if root.md_bg_color_disabled \
            else root.theme_cls.disabled_hint_text_color)
        disabled: root.disabled
        valign: "center"
        halign: "center"
        opposite_colors: root.opposite_colors


<CustomRectangularButton>:
    canvas:
        Clear
        Color:
            rgba: self.md_bg_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: (root._radius, )

    lbl_txt: lbl_txt
    height: (dp(48) if not root._height else root._height)
    width: lbl_txt.texture_size[0] + root.increment_width
    padding: (dp(8), dp(0))
    theme_text_color: 'Primary' if not root.text_color else 'Custom'
    markup: False

    BaseLabel:
        id: lbl_txt
        text: root.text if root.button_label else ''
        font_size: root.font_size
        can_capitalize: root.can_capitalize
        size_hint_x: None
        size_hint_y: None
        text_size: (None, root.height)
        height: self.texture_size[1] + dp(40)
        theme_text_color: root.theme_text_color
        text_color: root.text_color
        markup: root.markup
        disabled: root.disabled
        valign: 'center'
        halign: root.text_halign
        opposite_colors: root.opposite_colors


<CustomRectangularFlexButton>:
    canvas:
        Clear
        Color:
            rgba: self.md_bg_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: (root._radius, )

    lbl_txt: lbl_txt
    width: lbl_txt.texture_size[0] + root.increment_width
    height: lbl_txt.texture_size[1] + root.increment_height
    padding: (dp(8), 0)
    theme_text_color: 'Primary' if not root.text_color else 'Custom'
    markup: False

    BaseLabel:
        id: lbl_txt
        text: root.text if root.button_label else ''
        font_size: root.font_size
        can_capitalize: root.can_capitalize
        size_hint: None, None
        width: self.texture_size[0]
        height: self.texture_size[1]
        text_size: None, None
        theme_text_color: root.theme_text_color
        text_color: root.text_color
        markup: root.markup
        disabled: root.disabled
        valign: 'center'
        halign: root.text_halign
        opposite_colors: root.opposite_colors


<CustomRoundButton>:
    canvas:
        Clear
        Color:
            rgba: self.md_bg_color if md_icon(root.icon) else (0, 0, 0, 0)
        Ellipse:
            size: self.size
            pos: self.pos
            source: self.source if hasattr(self, "source") else ""

    lbl_txt: lbl_txt
    size: (self.fixed_width or dp(48), self.fixed_height or dp(48))
    padding: self.icon_padding if md_icon(root.icon) else 0
    theme_text_color: 'Primary'

    CustomIcon:
        id: lbl_txt
        size_hint: 1, 1
        icon: root.icon
        font_size: root.user_font_size if root.user_font_size else self.font_size
        font_name: root.font_name if root.font_name else self.font_name
        color: root.text_color if root.text_color is not None else app.color_white
        disabled: root.disabled
        valign: 'center'
        halign: 'center'
        opposite_colors: root.opposite_colors


<CustomRectangularIconButton>:
    canvas:
        Clear
        Color:
            rgba: self.md_bg_color
        RoundedRectangle:
            size: self.size
            pos: self.pos
            radius: (root._radius, )

    lbl_txt: lbl_txt
    size: dp(36), dp(36)
    padding: dp(0)
    theme_text_color: 'Primary'
    markup: False

    CustomIcon:
        id: lbl_txt
        icon: root.icon
        icon_pack: root.icon_pack
        font_size: root.font_size
        font_name: root.font_name if root.font_name else self.font_name
        color: root.text_color if root.text_color is not None else app.color_white
        disabled: root.disabled
        valign: 'center'
        halign: 'center'
        opposite_colors: root.opposite_colors


<CustomFlatButton>:
    height: self.fixed_height if self.fixed_height is not None else self.height
    font_size: sp(16)


<CustomRaisedButton>:
    md_bg_color: app.theme_cls.primary_color
    theme_text_color: 'Custom'
    text_color: root.specific_text_color
    elevation_normal: 0
    elevation_raised: 0
    font_size: sp(16)


<CustomRaisedFlexButton>:
    md_bg_color: app.theme_cls.primary_color
    theme_text_color: 'Custom'
    text_color: root.specific_text_color
    elevation_normal: 0
    elevation_raised: 0
    font_size: sp(16)


<RoundedButton>:
    _radius: 8
    increment_width: dp(16)
    increment_height: dp(16)
    markup: True


<RoundedFlexWidthButton>:


<RoundedFlexHeightButton>:


<RoundedFlexButton>:
    _radius: 8
    increment_width: dp(16)
    increment_height: dp(16)


<CustomIconButton>:
    canvas:
        Color:
            rgba: self.background_color
        BorderImage:
            border: self.border
            pos: self.pos
            size: self.size
            source: self.disabled_image if self.disabled else self.state_image
        Color:
            rgba: 1, 1, 1, 1
        Rectangle:
            texture: self.texture
            size: self.texture_size
            pos: int(self.center_x - self.texture_size[0] / 2.), int(self.center_y - self.texture_size[1] / 2.)

    size_hint: None, None
    size: self.button_width, self.button_height
    pos_hint: {"center_x": .5, "center_y": .5}
    text_size: self.size
    valign: 'center'
    halign: 'center'
    font_style: "Body1"
    text: "[size={}]{}[/size]".format(self.icon_size, make_icon(self.icon, self.icon_pack))
    state_image: self.background_normal if self.state == 'normal' else self.background_down
    disabled_image: self.background_disabled_normal if self.state == 'normal' else self.background_disabled_down


<TransparentIconButton>:
    background_color: app.color_transparent


<CloseIconButton>:
    icon: 'close'


<LabeledIconButton>:
    size_hint: None, None
    width: self.button_width
    height: self.button_height + self.label_height
    spacing: dp(0)
    padding: dp(0)
    btn_icon: btn_icon
    btn_label: btn_label

    CustomIcon:
        id: btn_icon
        pos_hint: {'center_x': 0.5}
        icon_width: root.button_width
        icon_height: root.button_height
        theme_text_color: 'Custom'
        text_color: root.icon_color
        md_bg_color: app.color_transparent
        font_size: root.icon_size
        icon_pack: root.icon_pack
        icon: root.icon

    NormalLabel:
        id: btn_label
        pos_hint: {'center_x': 0.5}
        size_hint: None, None
        size: (self.texture_size[0], root.label_height)
        text_size: None, None
        font_size: root.label_font_size
        theme_text_color: 'Custom'
        text_color: root.label_color
        md_bg_color: app.color_transparent
        text: root.label_text


<RaisedIconButton>:
    size_hint: None, None
    pos_hint: {"center_x": .5, "center_y": .5}
    text_size: self.size
    valign: 'center'
    halign: 'center'
    md_bg_color: app.theme_cls.primary_color if self.selected else app.theme_cls.primary_dark

    CustomIcon:
        id: btn_icon
        pos_hint: {"center_x": .5, "center_y": .5}
        icon_width: root.button_width
        icon_height: root.button_height
        theme_text_color: 'Custom'
        text_color: root.specific_text_color if root.selected else root.specific_secondary_text_color
        md_bg_color: app.color_transparent
        font_size: root.icon_size
        icon_pack: root.icon_pack
        icon: root.icon


<FloatingActionButton>:
    theme_text_color: "Custom"
    padding: dp(0)
    on_size: root.set_size(0)
